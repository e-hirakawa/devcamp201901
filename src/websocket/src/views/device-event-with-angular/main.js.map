{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/motion/motion.component.css","webpack:///./src/app/motion/motion.component.html","webpack:///./src/app/motion/motion.component.ts","webpack:///./src/app/orientation/orientation.component.css","webpack:///./src/app/orientation/orientation.component.html","webpack:///./src/app/orientation/orientation.component.ts","webpack:///./src/app/shared/sensor-param.model.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-orientation></app-orientation>\\r\\n<app-motion></app-motion>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { OrientationComponent } from './orientation/orientation.component';\nimport { MotionComponent } from './motion/motion.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    OrientationComponent,\n    MotionComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vdGlvbi9tb3Rpb24uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div id=\\\"motionLog\\\">\\n    <p id=\\\"motionTimeStamp\\\">motion TimeStamp: {{motionTimeStamp}}</p>\\n    <p id=\\\"motionParamX\\\">motion X: {{motionParamAlpha}}</p>\\n    <p id=\\\"motionParamY\\\">motion Y: {{motionParamBeta}}</p>\\n    <p id=\\\"motionParamZ\\\">motion Z: {{motionParamGamma}}</p>\\n\\n    <p>motion X MAX: {{maxAlpha}}</p>\\n    <p>motion Y MAX: {{maxBeta}}</p>\\n    <p>motion Z MAX: {{maxGamma}}</p>\\n\\n    <p>motion X min: {{minAlpha}}</p>\\n    <p>motion Y min: {{minBeta}}</p>\\n    <p>motion Z min: {{minGamma}}</p>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { SensorParam } from '../shared/sensor-param.model';\n\n@Component({\n  selector: 'app-motion',\n  templateUrl: './motion.component.html',\n  styleUrls: ['./motion.component.css']\n})\nexport class MotionComponent implements OnInit {\n  // 画面に表示する加速度の値を持つ\n  motionTimeStamp = 0;\n  motionParamAlpha = 0;\n  motionParamBeta = 0;\n  motionParamGamma = 0;\n  // 最大値\n  maxAlpha = 0;\n  maxBeta = 0;\n  maxGamma = 0;\n  // 最小値\n  minAlpha = 0;\n  minBeta = 0;\n  minGamma = 0;\n\n  // 取得した加速度のログを持つ\n  motionLog = new Array<SensorParam>();\n\n  constructor() { }\n\n  ngOnInit() {\n    // 加速度センサが変更を検知したら, このクラスが持つ情報を更新するよう設定\n    window.addEventListener('devicemotion', this.updateMotionInfo);\n  }\n\n  private updateMotionInfo = (event: DeviceMotionEvent) => {\n    // 以下のように書けば加速度センサから情報を取得できる\n    const timeStamp = event.timeStamp;\n    const accelX = event.acceleration.x;\n    const accelY = event.acceleration.y;\n    const accelZ = event.acceleration.z;\n\n    // 表示している情報を新しい情報で上書きする\n    this.motionTimeStamp = timeStamp;\n    this.motionParamAlpha = accelX;\n    this.motionParamBeta = accelY;\n    this.motionParamGamma = accelZ;\n\n    // 上書きした情報をログに格納\n    this.motionLog.push(new SensorParam(timeStamp, accelX, accelY, accelZ));\n\n    // 最大値と最小値を更新\n    if (this.maxAlpha < accelX) { this.maxAlpha = accelX; }\n    if (this.maxBeta < accelY) { this.maxBeta = accelY; }\n    if (this.maxGamma < accelZ) { this.maxGamma = accelZ; }\n    if (this.minAlpha > accelX) { this.minAlpha = accelX; }\n    if (this.minBeta > accelY) { this.minBeta = accelY; }\n    if (this.minGamma > accelZ) { this.minGamma = accelZ; }\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL29yaWVudGF0aW9uL29yaWVudGF0aW9uLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div id=\\\"orientationLog\\\">\\n    <p id=\\\"orientationTimeStamp\\\">orientation TimeStamp: {{orientationTimeStamp}}</p>\\n    <p id=\\\"orientationParamX\\\">orientation X: {{orientationParamX}}</p>\\n    <p id=\\\"orientationParamY\\\">orientation Y: {{orientationParamY}}</p>\\n    <p id=\\\"orientationParamZ\\\">orientation Z: {{orientationParamZ}}</p>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { SensorParam } from '../shared/sensor-param.model';\n\n@Component({\n  selector: 'app-orientation',\n  templateUrl: './orientation.component.html',\n  styleUrls: ['./orientation.component.css']\n})\nexport class OrientationComponent implements OnInit {\n  orientationTimeStamp = 0;\n  orientationParamX = 0;\n  orientationParamY = 0;\n  orientationParamZ = 0;\n\n  orientationLog = new Array<SensorParam>();\n\n  constructor() { }\n\n  ngOnInit() {\n    window.addEventListener('deviceorientation', this.updateOrientationInfo);\n  }\n\n  private updateOrientationInfo = (event: DeviceOrientationEvent) => {\n    const timeStamp = event.timeStamp;\n    const alpha = event.alpha;\n    const beta = event.beta;\n    const gamma = event.gamma;\n\n    this.orientationTimeStamp = timeStamp;\n    this.orientationParamX = alpha;\n    this.orientationParamY = beta;\n    this.orientationParamZ = gamma;\n\n    this.orientationLog.push(new SensorParam(timeStamp, alpha, beta, gamma));\n  }\n}\n","export class SensorParam {\r\n    timeStamp: number;\r\n    paramX: number;\r\n    paramY: number;\r\n    paramZ: number;\r\n\r\n    constructor(timeStamp: number, x: number, y: number, z: number) {\r\n        this.timeStamp = timeStamp;\r\n        this.paramX = x;\r\n        this.paramY = y;\r\n        this.paramZ = z;\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}